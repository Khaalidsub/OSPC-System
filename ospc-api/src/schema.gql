# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface IUser {
  id: ID
  name: String!
  password: String
  email: String!
  phoneNumber: String!
  universityId: String!
  university: String!
  role: Role
  accountStatus: CoachingStatus
  coachingStatus: CoachingStatus
  moderatorStatus: CoachingStatus!
}

enum Role {
  student
  coach
  admin
  moderator
  type
}

enum CoachingStatus {
  active
  pending
  inactive
}

interface IDepartment {
  id: String!
  departmentName: String!
  departmentDescription: String!

  """Example field (placeholder)"""
  departmentModerator: User
}

interface ISubject {
  id: String!
  subjectName: String!
  description: String!
  department: Department!
}

interface ISubjectDescription {
  description: String!
  title: String!
}

interface IAnswer {
  id: ID
  input: String!
  votes: Int!
  user: IUser
}

interface IQuestion {
  id: ID
  answers: [IAnswer!]!
  correctAnswer: IAnswer!
  question: String!
  subject: ISubject!
  user: IUser
}

type User implements IUser {
  id: ID
  name: String!
  password: String
  email: String!
  phoneNumber: String!
  universityId: String!
  university: String!
  role: Role
  accountStatus: CoachingStatus
  coachingStatus: CoachingStatus
  moderatorStatus: CoachingStatus!
}

type Department implements IDepartment {
  """Example field (placeholder)"""
  id: String!
  departmentName: String!
  departmentDescription: String!

  """Example field (placeholder)"""
  departmentModerator: User
}

type Subject implements ISubject {
  """Example field (placeholder)"""
  id: String!

  """Example field (placeholder)"""
  subjectName: String!

  """Example field (placeholder)"""
  description: String!
  department: Department!
}

type Schedule {
  day: Day!
  time_start: Float!
  time_end: Float!
}

enum Day {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
  type
}

type WeeklySchedule {
  id: ID!

  """Example field (placeholder)"""
  coach: IUser!

  """Example field (placeholder)"""
  schedule: [Schedule!]!
}

type Lesson {
  id: ID!

  """Example field (placeholder)"""
  student: User!
  date: DateTime!
  time_start: Int!
  subject: ISubject!
  coach: User!
  duration: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Question implements IQuestion {
  id: ID
  answers: [IAnswer!]!
  correctAnswer: IAnswer!
  question: String!
  subject: ISubject!
  user: IUser
}

type Answer implements IAnswer {
  id: ID
  input: String!
  votes: Int!
  user: IUser
}

input userType {
  id: ID
  name: String!
  password: String
  email: String!
  phoneNumber: String!
  universityId: String!
  university: String!
  role: Role = student
  accountStatus: CoachingStatus = pending
  coachingStatus: CoachingStatus = inactive
  moderatorStatus: CoachingStatus!
}

input DepartmentType {
  """Example field (placeholder)"""
  id: String!
}

input SubjectType {
  id: String!
  subjectName: String!
  description: String!
  department: DepartmentType!
}

input ScheduleTypeInput {
  day: Day!
  time_start: Float!
  time_end: Float!
}

input IAnswerType {
  id: ID
  input: String!
  votes: Int!
  user: userType
}

type Query {
  users: [User!]!
  user(id: String!): User!
  currentUser: IUser!
  departments: [Department!]!
  department(id: String!): Department!
  subjects: [Subject!]!
  subject(id: String!): Subject!
  getLessons: [Lesson!]!
  questions: [IQuestion!]!
  question(id: String!): IQuestion!
}

type Mutation {
  registerStudent(createUserInput: CreateUserInput!): User!
  approveStudent(id: String!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  loginUser(password: String!, email: String!): String!
  createDepartment(createDepartmentInput: CreateDepartmentInput!): Department!
  applyModerator(createDepartmentModeratorApplication: CreateDepartmentModeratorApplication!): User!
  addModerator(createDepartmentModerator: CreateUserInput!): User!
  approveDepartmentModerator(id: String!): User!
  assignDepartMentModerator(userId: String!, id: String!): IDepartment!
  updateDepartment(updateDepartmentInput: UpdateDepartmentInput!): Department!
  createSubject(createSubjectInput: CreateSubjectInput!): Subject!
  updateSubject(updateSubjectInput: UpdateSubjectInput!): Subject!
  removeSubject(id: String!): Subject!
  applyCoach(createWeeklySchedule: CreateWeeklyScheduleInput!, createSubjectSpecialization: CreateSubjecSpecialization!): User!
  approveCoach(id: String!): User!
  updateWeeklySchedule(updateWeeklySchedule: UpdateWeeklySchedule!): WeeklySchedule!
  bookLesson(createLessonInput: CreateLessonInput!): Lesson!
  makeQuestion(createQuestionInput: CreateQuestionInput!): IQuestion!
  answerQuestion(questionId: String!, updateAnswerInput: CreateAnswerInput!): IQuestion!
  voteAnswer(answer: String!, vote: Boolean!): IQuestion!
  approveAnswer(question: String!, answer: String!): IQuestion!
  updateQuestion(updateQuestionInput: UpdateQuestionInput!): IQuestion!
  updateAnswer(updateAnswerInput: UpdateAnswerInput!): IQuestion!
  removeQuestion(id: String!): IQuestion!
}

input CreateUserInput {
  """Example field (placeholder)"""
  name: String!

  """Example field (placeholder)"""
  university: String!

  """Example field (placeholder)"""
  password: String!

  """Example field (placeholder)"""
  email: String!

  """Example field (placeholder)"""
  phoneNumber: String!

  """Example field (placeholder)"""
  universityId: String!

  """Example field (placeholder)"""
  coachingStatus: CoachingStatus = inactive

  """Example field (placeholder)"""
  moderatorStatus: CoachingStatus = inactive
}

input UpdateUserInput {
  """Example field (placeholder)"""
  name: String

  """Example field (placeholder)"""
  university: String

  """Example field (placeholder)"""
  password: String

  """Example field (placeholder)"""
  email: String

  """Example field (placeholder)"""
  phoneNumber: String

  """Example field (placeholder)"""
  universityId: String

  """Example field (placeholder)"""
  coachingStatus: CoachingStatus = inactive

  """Example field (placeholder)"""
  moderatorStatus: CoachingStatus = inactive
  id: ID!

  """Example field (placeholder)"""
  accountStatus: CoachingStatus!

  """Example field (placeholder)"""
  role: CoachingStatus!
}

input CreateDepartmentInput {
  """Example field (placeholder)"""
  departmentName: String!

  """Example field (placeholder)"""
  departmentDescription: String!

  """Example field (placeholder)"""
  departmentModerator: String!
}

input CreateDepartmentModeratorApplication {
  """Example field (placeholder)"""
  description: String!

  """Example field (placeholder)"""
  department: String!

  """Example field (placeholder)"""
  resumeLinks: [String!]!

  """Example field (placeholder)"""
  user: String!
}

input UpdateDepartmentInput {
  """Example field (placeholder)"""
  departmentName: String

  """Example field (placeholder)"""
  departmentDescription: String

  """Example field (placeholder)"""
  departmentModerator: String
  id: ID!
}

input CreateSubjectInput {
  """Example field (placeholder)"""
  subjectName: String!

  """Example field (placeholder)"""
  description: String!

  """Example field (placeholder)"""
  department: String!
}

input UpdateSubjectInput {
  """Example field (placeholder)"""
  id: String

  """Example field (placeholder)"""
  subjectName: String

  """Example field (placeholder)"""
  description: String
}

input CreateWeeklyScheduleInput {
  schedule: [IScheduleTypeInput!]!
}

input IScheduleTypeInput {
  day: Day!
  time_start: Int!
  time_end: Int!
}

input CreateSubjecSpecialization {
  specialization: [CreateSubjectDescription!]!
  subject: String!
}

input CreateSubjectDescription {
  title: String!
  description: String!
}

input UpdateWeeklySchedule {
  id: ID!

  """Example field (placeholder)"""
  coach: userType

  """Example field (placeholder)"""
  schedule: [ScheduleTypeInput!]
}

input CreateLessonInput {
  subject: String!
  coach: String!
  student: String!
  date: DateTime!
  time_start: Int!
  duration: Int!
}

input CreateQuestionInput {
  """"""
  question: String!
  subject: SubjectType!
}

input CreateAnswerInput {
  input: String!
  votes: Int = 0
}

input UpdateQuestionInput {
  answers: [IAnswerType!]!
  correctAnswer: IAnswerType!
  question: String!
  subject: SubjectType!
  user: userType!
  id: ID!
}

input UpdateAnswerInput {
  input: String!
  votes: Int!
  user: userType!
  id: ID!
}
